<apex:page sidebar="false" controller="SLCA2.CA_JSInitController">

<apex:stylesheet value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'themes/standard/css/theme.css')}"/>
 
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/jquery-1.6.1.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/jquery-ui-1.8.11.custom.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/jquery.ui.datepicker.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/ui.timepicker.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/jquery.validate.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/jquery.ui.sf.filters.102.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/color-select-ui-1.0.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/panels-ui-1.0.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SLCA2__CalendarAnything, 'js/extends-ui-1.0.js')}"/>
<style> 
                .pan1 {
                	
                }
                #dlg_add_edit
                {
                	font-size: 14px !important;
                }
                #dlg_add_edit input.text {
                        margin-bottom: 5px; 
                        padding: 2px; 
                }
                
                #dlg_add_edit select.text {
                        margin-bottom: 5px; 
                        padding: 2px; 
                }
                
                #dlg_add_edit .text-size { 
                        font-size: 0.85em;
                        font-family: Arial,Helvetica,sans-serif;
                        padding: 2px;
                }
                #dlg_add_edit .ui-dialog-title { font-size: 1.0em; }
                
                #dlg_add_edit fieldset { 
                        padding:0px; 
                        border:0px; 
                        margin-top:0px; 
                }
                
                
                #dlg_add_edit .ui-button { 
                                outline: 0px; 
                                margin:0px;  
                                text-decoration:none !important; 
                                cursor:pointer; 
                                position: relative; 
                                text-align: center; 
                }
                
                #dlg_add_edit td.list-column
                {
                        width:45%;
                }
                
                #dlg_add_edit .ui-dialog .ui-dialog-content .ui-widget-content { 
                        margin-left: 0px; 
                        margin-right: 0px; 
                        padding: 3px 3px 3px 3px; 
                }
                #dlg_add_edit .ui-widget input, .ui-widget select, .ui-widget textarea, .ui-widget button { font-size: 0.85em;}
            	#dlg_add_edit .cs-popup-color-item { 
                        width:15px;
                        height:15px;
                        border:1px solid #fff;
                        margin:0 4px 4px 0;
                                
                        text-decoration:none; 
                                
                        display:block;
                }
                
                #sf_filters_content select
                {
                	!padding: 3px; //IE7
					_padding: 3px; //IE6
					!height: 18px; //IE7
					_height: 18px; //IE6
                	!margin: 8px 0 -6px 0; //IE7
					_margin: 8px 0 -6px 0; //IE6
				}
                
                #dlg_add_edit .ui-accordion-content { padding: 0px 0px 0px 0px;}
        		#dlg_add_edit .cs-popup-color-item a:hover { border-color:#000; }   
                
                #dlg_add_edit .fcui-block-header {  background-color:#CCC; }
                
                #dlg_add_edit .ui-form-label { width: 120px;  } 
                
                #dlg_add_edit .cs-popup-colors { display: none; position: relative; background-color:#eeecd1; z-index: 999; }
                
                #dlg_add_edit div ul { 
                        list-style-type: none; 
                        margin: 0; 
                        padding: 0; 
                        margin-bottom: 10px; 
                        font-size: .8em; 
                        overflow:auto;  
                        height:185px;
                        width: 100%;
                }
                
                #dlg_add_edit h3 { display: block !important; }
                
                #dlg_add_edit div ul li { 
                        margin: 5px; 
                        padding: 5px; 
                }
                
                #dlg_add_edit #list_of_object_fields { 
                        height:190px; 
                        overflow:visible;
                }
                
                #dlg_add_edit #list_of_selected_fields {  
                        height:190px; 
                        overflow:visible;
                }
                
                #dlg_add_edit .non-moveable
                {
                        border-color:black;
                } 
                
                #dlg_add_edit h5 { 
                        font-size: 0.95em; 
                        margin: 0; 
                        padding: 5px; 
                        text-align:center; 
                        vertical-align:middle; 
                        padding-top:2px; 
                        font-family: Arial,Helvetica,sans-serif;
                }
                
                #dlg_add_edit #sf_filter_add_place {
                        text-align: right;
                        margin-left: 470px;
                }
                
                .ui-datepicker { z-index : 2002 !important; }
                
                .ui-widget {  font-size: 1.0em; }
				.ui-widget-content { font-size:1.1em; padding: 2px; 2px; 2px; 2px;}
				.ui-button { font-size:0.8em; }
				.ui-advanced{ font-size: 0.9em; }
				
				.ui-widget-content input, .ui-widget-content textarea, .ui-widget-content keygen, .ui-widget-content select, .ui-widget-content button, .ui-widget-content isindex, .ui-widget-content datagrid {
					margin: 0em;
					margin-top: 0em;
					margin-right: 0em;
					margin-bottom: 0em;
					margin-left: 0em;
					font: -webkit-small-control;
					color: initial;
					letter-spacing: normal;
					word-spacing: normal;
					line-height: normal;
					text-transform: none;
					text-indent: 0px;
					text-shadow: none;
					display: inline-block;
					text-align: -webkit-auto;
				}

				.ui-corner-all {
					-moz-border-radius: 5px;
					-webkit-border-radius: 5px;
					border-radius: 5px;
					border-top-left-radius: 5px 5px;
					border-top-right-radius: 5px 5px;
					border-bottom-right-radius: 5px 5px;
					border-bottom-left-radius: 5px 5px;
				}
                
                .is-selected-item {
					background-color: #26c;
					color: #fff;
					outline: none;
					font-weight: bold;
				}
				.left_btn {
					border: 1px solid #26c;
					border-radius: 5px;
					width: 40px;
					height: 30px;
					text-align: center;
					vertical-align: middle;
					background-color: #e2e2e2;
					background-image: url("{!$Resource.left_arrow}");
				}
				.left_btn:hover {
					border: 1px solid #26c;
					border-radius: 5px;
					width: 40px;
					height: 30px;
					text-align: center;
					vertical-align: middle;
					background-color: #bbf0ff;
					background-image: url("{!$Resource.left_arrow_h}");
				}
				.right_btn {
					border: 1px solid #26c;
					border-radius: 5px;
					width: 40px;
					height: 30px;
					text-align: center;
					vertical-align: middle;
					background-color: #e2e2e2;
					background-image: url("{!$Resource.right_arrow}");
				}
				.right_btn:hover {
					border: 1px solid #26c;
					border-radius: 5px;
					width: 40px;
					height: 30px;
					text-align: center;
					vertical-align: middle;
					background-color: #bbf0ff;
					background-image: url("{!$Resource.right_arrow_h}");
				}
				/* Preventing selectable in webkit */
				body {
					-khtml-user-select: none;
					-webkit-user-select: none;
				}
				.ui-state-default, .list-column {
					-moz-user-select: none;
					-khtml-user-select: none;
					-webkit-user-select: none;
					user-select: none;
				}
				.widgetGrayBackground {
					position: absolute;
					z-index: 998;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
					/*background-color: #000;
					opacity: 0.3;*/
					background-image: url("{!URLFOR($Resource.CalendarAnything, 'css/pixel.png')}");
				}
				.widgetMessage {
					border: 2px solid #eef;
					border-radius: 5px;
					background-color: #a03;
					color: #fff;
					position: absolute;
					z-index: 999;
					top: 120px;
					left: 30%;
					overflow:auto;
				}
				.scrollHidden {
					height: 100%;
					position: relative;
					overflow: hidden;
				}
</style>

<!-- -------- Status Bar -------- -->
<div id="salesforceSource_blurybackground" style="position:absolute; left:1px; top:1px; width:100%; height:100%; 
												text-align:center; vertical-align: middle; background-color: #dcdcdc; 
												opacity:0.6;filter:alpha(opacity=60); z-index:888;"></div>
<div id="ManageMembersViewport_loading" class="waitingSearchDiv" style="width: 100%; height: 80%; display: ''; z-index:889;">
<div style="width: 144px;vertical-align: middle;" class="waitingHolder">
	<table align="center" valign="top" style="width: 100%; height: 30%">
		<tr align="center" valign="top" style="width: 100%; height: 30%">
			<td valign="top"><img class="waitingImage" src="/img/loading.gif"/><span class="waitingDescription">Processing......</span></td>
		</tr>
	</table>
</div>
</div>

<!-- ---------------- -->

<script>
function on_delete() {
        return window.confirm('You are sure?');
}
jQuery.noConflict();    
(function($) {
        $(document).ready(function() {
			
			function getBodyScrollTop() {
				return self.pageYOffset || 
				(document.documentElement && document.documentElement.scrollTop) || 
				(document.body && document.body.scrollTop);
			}
			
			function showErrorMessage(p_message) {
		
				var messageContainer = document.createElement('div');
				document.body.appendChild(messageContainer);
				var itemsLen = $('.widgetError').length;
				
				$(messageContainer).addClass('widgetError');
				$(messageContainer).attr('id','wdg_err_wnd_'+itemsLen);
				$(messageContainer).css('top',document.scrollTop);
				$(document).find('body').addClass('scrollHidden');
				
				var text = "";
				var grayElems = $('.widgetGrayBackground').length;
				if (grayElems > 0) {
					text += "<div class='widgetGrayBackground' style='display:none;'></div>";
				} else {
					text += "<div class='widgetGrayBackground'></div>";
				}
				text += "<table width='55%' class='widgetMessage' style='margin:"+(itemsLen*8)+"px; top: "+
						(getBodyScrollTop()+120)+"px;'>";
				text += "<tr><td style='color:#fff;' id='wdg_msg_container' align='center'>";
				text += p_message;
				text += "</td><td valign='top'>";
				text += "<a href='#' style='color:yellow; font-weight:bold; text-decoration:none;'>X</a>";
				text += "</td></tr>";
				text += "</table>";
				
				$(messageContainer).html(text);
				$(messageContainer).find('a').bind('click',function(){
					$(document).find('body').removeClass('scrollHidden');
					$(messageContainer).remove();
				});
				$('.widgetGrayBackground').css('height',(document.body.scrollHeight > document.body.offsetHeight)?document.body.scrollHeight:document.body.offsetHeight);
			}
			
        		function serialize(data) {
        			var retStr = '';
        			for (var item in data) {
        				if (typeof(data[item]) == 'function') {
        					//retStr += 'function\n';
        				} else {
        					retStr += item + ': ' + data[item] + '\n';
        				}
        			}
        			return retStr;
        		}
                
                var json_response = null;
                var g_cid = null;
                var AddButtonsClass = "";
                var EditButtonsClass = "";
                var DeleteButtonsClass = "";
                var sessionToken = "{!SessionToken}";
                
                /* properties names definition here. this is necessary to be sure that names is the same in client and server part*/
                
                var Names = {};
                Names.UrlEventHandle = '{!EventHandlerPageName}';
                Names.UrlJsonResponses = '{!AjaxResponsePageName}'; 
                
                Names.GetParamEvent = '{!GetParameterNameEvent}';
                Names.GetParamCalID = '{!GetParameterNameCID}';
                Names.GetParamToken = '{!GetParameterNameToken}';
                Names.GetParamColor = '{!GetParameterNameColor}';
                Names.GetParamObjType = '{!GetParameterNameObjType}';
                Names.GetParamObjName = '{!GetParameterNameObjName}';
                Names.GetParamObjID = '{!GetParameterNameObjId}';
                Names.GetParamSelectedIDs = '{!GetParameterNameSelectedIDs}';
                
                Names.GetParamTitle = '{!GetParameterNameTitle}';
                Names.GetParamEntryField = '{!GetParameterNameEntryField}';
                Names.GetParamStartField = '{!GetParameterNameStartField}';
                Names.GetParamEndField = '{!GetParameterNameEndField}';
                Names.GetParamVisible = '{!GetParameterNameVisible}';
                Names.GetParamEditable = '{!GetParameterNameEditable}';
                Names.GetParamOwnership = '{!GetParameterNameOwnership}';
                Names.GetParamRestrictVisability = '{!GetParameterNameRestrictVisability}';
                Names.GetParamHoverFields = '{!GetParameterNameHoverFields}';
                Names.GetParamFilterset = '{!GetParameterNameFilterset}';
                Names.GetParamFilteradvanced = '{!GetParameterNameFilteradvanced}';
                Names.GetParamFilteradvancedSection = '{!ActiveAdvancedFilterSection}';
                Names.GetParamSelectedGroupsIDs = '{!GetParameterNameSelectedGroupsIDs}';
                Names.GetParamAdvOptions = '{!GetParameterNameAdvOptions}';
                Names.GetParamFieldChanged = '{!GetParameterNameChangedField}';
                Names.GetParamPicklist = '{!GetParameterNamePicklist}';
                Names.GetParamCreatingFields = '{!GetParameterNameCreatingFields}';
                
                Names.ActionCalendarCreate = '{!EventNameCalendarCreate}';
                Names.ActionCalendarEdit = '{!EventNameCalendarEdit}';
                Names.ActionCalendarDelete = '{!EventNameCalendarDelete}';
                Names.ActionCalendarSave = '{!EventNameCalendarSave}';
                Names.ActionGroupCreate = '{!EventNameCalendarGroupCreate}';
                Names.ActionGroupDelete = '{!EventNameCalendarGroupDelete}';
                Names.ActionGroupSave = '{!EventNameCalendarGroupSave}';
                Names.ActionFieldChange = '{!EventNameFieldChange}';
                Names.ActionLoadFilters = '{!EventNameFiltersLoad}';
                
                g_cid = "{!HTMLENCODE(CIDParam)}";
                $('#dlg_calendar_name').val("");
	            //initCalendarDlg();
    	        loadingData(Names.ActionCalendarEdit, g_cid);
                
                function DialogInitialize() {
                        if(json_response != null) {
                        
                                if( json_response.HoverPageAvailableFields != undefined ) 
                                {
                                        if(json_response.HoverPageSelectedFields == undefined) {
                                                json_response.HoverPageSelectedFields = [];
                                        }
                                        
                                        
                                        $("#dlg_display").SortablePanels({
                                                clean : true,
                                                panel1 : 'list_of_object_fields',
                                                panel2 : 'list_of_selected_fields',
                                                connected_class : 'connectedSortable',
                                                panel1_list : json_response.HoverPageAvailableFields,
                                                panel2_list : json_response.HoverPageSelectedFields                                               
                                        });
                                }
                                
                                if( json_response.AvailableCreatingFields != undefined ) 
                                {
                                        if(json_response.SelectedCreatingFields == undefined) {
                                                json_response.SelectedCreatingFields = [];
                                        }
                                        
                                        
                                        $("#dlg_display_on_create").SortablePanels({
                                                clean : true,
                                                panel1 : 'list_of_object_creating_fields',
                                                panel2 : 'list_of_selected_creating_fields',
                                                connected_class : 'connectedSortable',
                                                panel1_list : json_response.AvailableCreatingFields,
                                                panel2_list : json_response.SelectedCreatingFields,     
                                                nonMoveablePropertyName : 'isRequired'                                    
                                        });
                                }
                                
				                if( json_response.AvailableCalendars != undefined &&
				                    json_response.SelectedCalendars != undefined) 
				                {
				                    $("#select_calendars_dlg").SortablePanels({
				                        clean : true,
				                        panel1 : 'list_of_available_calendars',
				                        panel2 : 'list_of_selected_calendars',
				                        connected_class : 'connectedGroupsSortable',
				                        panel1_list : json_response.AvailableCalendars,
				                        panel2_list : json_response.SelectedCalendars                       
				                    });
				                }
                                
                                if( json_response.ObjectFields != undefined ) 
                                {
                                                var source = Names.UrlJsonResponses + "?"+Names.GetParamCalID+"=" + g_cid + "&"+Names.GetParamEvent+"=" + Names.ActionLoadFilters;
                                                if(g_cid == undefined || g_cid == '') 
                                                {
                                                        source += "&"+ Names.GetParamObjName +"=" + json_response.SelectedObject;                                               
                                                }
                                                $("#dlg_filters").sfFilters("destroy");
                                                $("#dlg_filters").sfFilters({
                                                        debug : false,
                                                        sourceFieldData: source,
                                                        calcMargin : function(width) {
															var res = (width == 0)? 390 : width-160;
															if ($.browser.msie && $.browser.version=="7.0") res /= 2;
															return res;
														},
                                                        delimiter : "___",
                                                        sort : false,
                                                        safeValue : false,
                                                        sessionToken : sessionToken,
                                                        firstFilter : false,
                                                        switchover : true,
                                                        goalTargetID: json_response.SelectedObject,
                                                        
                                                        GetParamNameToken : Names.GetParamToken,
                                                        GetParamNamePicklist : Names.GetParamPicklist,
                        
                                                        load : function(p_widget) {
                                                               p_widget.options.fieldset = json_response.ObjectFields;
                                                               p_widget.options.filterset = json_response.UserFilters;
                                                        },
                                                        afterload : function(p_widget) {
                                                                try {
                                                                        if (json_response.Mask != 'null') {
                                                                        	p_widget.AdvancedFilter(json_response.Mask);
                                                                        }
                                                                } catch(err) {}
                                                                if(typeof (json_response.activeAdvancedFilterSection) == 'undefined') {
                                                                	json_response.activeAdvancedFilterSection = 2;
                                                                }
                                                                var actSect = json_response.activeAdvancedFilterSection;
                                                                if (actSect == 0) {
                                                                	$("#sf_filter_advanced").accordion("activate",0);
                                                                }
                                                                //$("#sf_filter_advanced").accordion("option","active");
                                                                //alert(actSect);
                                                        }       
                                                });
                                }
                                
                                if( json_response.NonSelectedGroups != undefined &&
                                        json_response.SelectedGroups != undefined) 
                                {
                                        $("#groups").SortablePanels({
                                                clean : true,
                                                panel1 : 'list_of_groups',
                                                panel2 : 'list_of_selected_groups',
                                                connected_class : 'connectedGroups',
                                                panel1_list : json_response.NonSelectedGroups,
                                                panel2_list : json_response.SelectedGroups                                        
                                        });
                                }
                                
                                if( json_response.Title != undefined ) 
                                        $('#dlg_calendar_name').val(json_response.Title);
			                	if( json_response.CalendarGroupName != undefined ) 
			                    $('#dlg_group_name').val(json_response.CalendarGroupName);
                                
                                //alert(json_response.Color);
                                if (json_response.Color == 'null') {
                                	json_response.Color = 'rgb(80,102,240)';
                                }
                                if( json_response.Color != undefined )
                                        $('#dlg_colors_popup').html('').ColorSelect({ nopopup: true, color: json_response.Color });
                                
                                if( json_response.TypeOfObjects != undefined) 
                                        $('#dlg_object_type').SelectInitialize(json_response.TypeOfObjects, json_response.SelectedObjectType);
                                
                                if( json_response.Objects != undefined)         
                                        $('#dlg_object_name').SelectInitialize(json_response.Objects, json_response.SelectedObject);
                                        
                                if( json_response.EntryFields != undefined)     
                                        $('#dlg_entry_label').SelectInitialize(json_response.EntryFields, json_response.SelectedEntryField);
                                
                                if( json_response.StartFields != undefined)     
                                        $('#dlg_entry_start').SelectInitialize(json_response.StartFields, json_response.SelectedStartField);
                                        
                                if( json_response.EndFields != undefined)       
                                        $('#dlg_entry_end').SelectInitialize(json_response.EndFields, json_response.SelectedEndField);
                                        
                                if( json_response.Visible != undefined) {
                                                $('#dlg_visible').CheckboxInitialize(json_response.Visible);
                                }
                                
                                if( json_response.editable != undefined)        {
                                                $('#dlg_editable').CheckboxInitialize(json_response.editable);
                                }
                                        
                                if( json_response.OwnershipOfObjectRecords != undefined) {
                                        $('#records').RadioInitializeByReturn(json_response.OwnershipOfObjectRecords);
                                }
                                        
                                if( json_response.RestrictVisability != undefined ) {
                                        $('#restricts').RadioInitializeByReturn(json_response.RestrictVisability);
                                }
                                
                                if( json_response.AdvancedOptionsValue != undefined ) {
                                        $("#advanced_options_value").val( json_response.AdvancedOptionsValue);
                                }
                                
                                if( json_response.activeAdvancedFilterSection != undefined ) {
                                	
                                }
                                
                                //alert(json_response.Mask);
                                if($('#dlg_object_name').value() == '') {
                                	$('ul').html('');
                                }
                                //alert(serialize(json_response.AdvancedOptionsValue));
                        }
                }
        		
                function prepareParams(p_event,p_cid, p_additional)
                {
	                var params = {};
	                params[Names.GetParamEvent] = p_event;
	                params[Names.GetParamCalID] = p_cid;
	                params[Names.GetParamToken] = sessionToken;
	                if(p_additional != 'undefined') {
	                    //var tstr = '';
	                    for(var name in p_additional) {
	                    	params[name] = p_additional[name];
	                    	//tstr += name + ': ' + params[name] + '\n';
	                    }
	                    //alert(tstr);
	                }
	                return params;
                } 
                
                function sendActionRequest(p_event, p_cid, p_additional)
                {
                        //$("body").loadingBar(true);
                        var params = prepareParams(p_event,p_cid, p_additional);
                        $.ajax({
                        url: Names.UrlEventHandle,
                        //async:  false,
                        type: 'POST',
                        dataType: 'json',
                        data: params,
                        cache: false, 
                        error : function(XMLHttpRequest, textStatus, errorThrown){
                                                //$("body").loadingBar(false);
                                                alert('Changes don\'t saved to server. The error thrown: '+errorThrown);
                                        },
                        success: function(data){
                            //$("body").loadingBar(false);
                            if (data.status.substr(0,5) == 'Error') {
                                isError = true;
                                var regExp = /STRING_TOO_LONG/g;
                                showErrorMessage(regExp.test(data.status) ? "You have entered too many numbers of filters in Step 5. Please delete some of filters and save a calendar again." : data.status);
                            } else {
                                //alert(serialize(params));
                                window.location.href="{!AjaxListPageName}";
                            }
                        }
                });     
                }
                
                function loadingData(p_event, p_cid, p_additional) {
                        //$("#msg").append("loadingData | ");
                        //$("body").loadingBar(true);
                        var isCache = false;
                        var params = prepareParams(p_event,p_cid, p_additional);
                        $.ajax({
                        url: Names.UrlJsonResponses,
                        //async:  false,
                        type: 'POST',
                        dataType: 'json',
                        data: params,
                        cache: isCache, 
                        error : function(XMLHttpRequest, textStatus, errorThrown){
                                                $("body").loadingBar(false);
                                                alert('Some error caused. Probably, session is locked by timeout. Please, reload the page: '+errorThrown);
                                        },
                        success: function(data){
                                json_response = data;
                                //$("body").loadingBar(false);
                                
                                var isError = false;
                        		if (p_event != Names.ActionFieldChange) {
                                	if (json_response.status.substring(0, 5).toLowerCase() == 'error') {
                                                                isError = true;
                                                                alert(json_response.status);
                                                        }
                                                }
                                                                
                                if((p_event == Names.ActionCalendarCreate || p_event == Names.ActionCalendarEdit) && isError == false ) 
                                {
                                        DialogInitialize();
                                        //$("#dlg_add_edit").dialog( "option", "title", title );
                                        //$('#dlg_add_edit').dialog('open');
                                }
                                
                                if(p_event == Names.ActionFieldChange) 
                                {
                                                        DialogInitialize();                             
                                }
				                $('#salesforceSource_blurybackground').hide("slow");
				                $('#ManageMembersViewport_loading').hide("slow");
                        }
                });     
                }
                
                function validateName(name) {
                	var reg = /[\\\/\$\?'"@#%\[\]\{\}]/;
                	var res = reg.test(name);
                	var isValidate = true;
                	
                	if (res) {
                		alert('\''+name+'\' contains incorrect symbols');
                		isValidate = false;
                	}
                	
                	return isValidate;
                }
                
                function prepareNameToSave(nameStr) {
                	var result = nameStr.replace(/[\\]/g,'\\');
                	var result = nameStr.replace(/[\/]/g,'\/');
                	var result = nameStr.replace(/[\?]/g,'\?');
                	var result = nameStr.replace(/[\$]/g,'\$');
                	var result = nameStr.replace(/[']/g,'\'');
                	var result = nameStr.replace(/["]/g,'\"');
                	
                	return result;
                }

                function validateFields() {
                    var ret = true;
                    
                    if ($('#dlg_calendar_name').val() == '') {
                    	alert('Enter the name of calendar.');
                    	ret = false;
                    } else if ($('#dlg_object_name').val() == '') {
                    	alert('Enter name of object.');
                    	ret = false;
                    } else if ($('#dlg_entry_label').val() == '') {
                    	alert('Enter entry label.');
                    	ret = false;
                    } else if ($('#dlg_entry_start').val() == '') {
                    	alert('Choose \'Entry Start\' value.');
                    	ret = false;
                    }/* else if ($('#dlg_entry_end').val() == '') {
                    	alert('Choose \'Entry End\' value.');
                    	ret = false;
                    }*/
                    
                    return ret;
                }
                
                function SaveSettings() {
                        var params = {};
                        params[Names.GetParamTitle] = prepareNameToSave($('#dlg_calendar_name').val());
                       	params[Names.GetParamColor] = $('#cs_indicator').css('background-color');
                        params[Names.GetParamObjType] = $('#dlg_object_type').val();
                        params[Names.GetParamObjName] = $('#dlg_object_name').val();
                        params[Names.GetParamEntryField] = $('#dlg_entry_label').val();
                        params[Names.GetParamStartField] = $('#dlg_entry_start').val();
                        var endField = $('#dlg_entry_end').val();
                        if (endField !== '--none--') {
                        	params[Names.GetParamEndField] = endField;
                        } else {
                        	params[Names.GetParamEndField] = '';
                        }
                        params[Names.GetParamVisible] = $('#dlg_visible').CheckboxGetValue();
                        params[Names.GetParamEditable] = $('#dlg_editable').CheckboxGetValue();
                        //params[Names.GetParamOwnership] = $('#records').RadioGetReturn();
                        //params[Names.GetParamRestrictVisability] = $('#restricts').RadioGetReturn();
                        params[Names.GetParamOwnership] = $("input:radio[name='records']:checked").val();
                        params[Names.GetParamRestrictVisability] = $("input:radio[name='restricts']:checked").val();
                        params[Names.GetParamFilteradvancedSection] = $("#sf_filter_advanced").accordion("option","active");
                        
                        var hover_result = $("#dlg_display").SortablePanelsGetResult(
                                { panel1 : 'list_of_object_fields', panel2 : 'list_of_selected_fields'} 
                        );
                        params[Names.GetParamHoverFields] = hover_result.panel2;
                        
                        
                        var creating_result = $("#dlg_display_on_create").SortablePanelsGetResult(
                                { panel1 : 'list_of_object_creating_fields', panel2 : 'list_of_selected_creating_fields'} 
                        );
                        params[Names.GetParamCreatingFields] = creating_result.panel2;
                        
                        
                        
                        params[Names.GetParamFilterset] = $('#dlg_filters').sfFilters("Serialize");
                        params[Names.GetParamFilteradvanced] = $('#dlg_filters').sfFilters("AdvancedFilter");
                        
                        //alert(params[Names.GetParamFilterset]);
                        //alert(params[Names.GetParamFilteradvanced]);
                        
                        var groups_result = $("#groups").SortablePanelsGetResult(
                                { panel1 : 'list_of_groups', panel2 : 'list_of_selected_groups'}
                        );
                        
                        //params['NonSelectedGroups'] = groups_result.panel1;
                        params[Names.GetParamSelectedGroupsIDs] = groups_result.panel2;
                        
                        //params[Names.GetParamAdvOptions] = $("#advanced_options_value").val();
                        //return false;
                        
                        //console.log(params);
                        //if (validateName($('#dlg_calendar_name').val())) {
                        //	sendActionRequest(Names.ActionCalendarSave, g_cid, params);
                        //}
                        
                        /*var prepName = prepareNameToSave($('#dlg_calendar_name').val());
                        $('#dlg_calendar_name').val(prepName);*/
                        if (validateFields()) {
                        	sendActionRequest(Names.ActionCalendarSave, g_cid, params);
                        }
                        
                }
                
                $("#saveBtn").click(function(event) {
            		SaveSettings();
        		});
        		
        		$("#saveBtnBot").click(function(event) {
            		SaveSettings();
        		});
                

                function print_object(p_what, p_where) {
                        var $msg = $('#' + p_where);
                        $msg.append( " { " );
                        for(var it in p_what) {
                                if (typeof p_what[it] == 'object') {
                                        $msg.append(it + " = " + print_object(p_what[it], p_where));
                                }
                                $msg.append(it + "  =  " + p_what[it] + " , ");
                        }
                        $msg.append(" } ");
                }
                
                
                //onload...
                
                /*$("body").ajaxError(function(e, xhr, settings, exception) {
                                alert('SalesForce.com session is timeout. You have attempted to access a page that requires a salesforce.com login.');
                                $("body").loadingBar(false);
                });*/
                        
                $("#step1, #step2, #step3, #step4, #step5, #step6").accordion({ 
                                        header: 'h3' , 
                                        collapsible: true,
                                        fillSpace: false,
                                        autoHeight: false,
                                        animated: true,
                                        clearStyle: true,
                                        navigation: false
                });
                
        function initCalendarDlg() {
                $("#dlg_add_edit").dialog("destroy");
            $("#dlg_add_edit").dialog({
                bgiframe: true,
                autoOpen: false,
                width: jQuery('body').width() * 0.8,
                height: 640,
                modal: true,
                buttons: {
                    'Cancel': function() {
                        $(this).dialog('close');
                        $(this).dialog('destroy');
                        return false;
                    },
                    'Save': function() {
                        SaveSettings();
                        return false;
                    }
                }
            });
        }
        
                $('#dlg_object_type').bind("change", function(event) {
                        
                        var propsObj = {};
                        propsObj[Names.GetParamObjType] = $(this).attr('value');
                        propsObj[Names.GetParamCalID] = g_cid;
                        propsObj[Names.GetParamObjName] = $('#dlg_object_name').children()[jQuery('#dlg_object_name')[0].selectedIndex].value;
                        propsObj[Names.GetParamStartField] = $('#dlg_entry_start').children()[jQuery('#dlg_entry_start')[0].selectedIndex].value;
                        propsObj[Names.GetParamEndField] = $('#dlg_entry_end').children()[jQuery('#dlg_entry_end')[0].selectedIndex].value;
                        propsObj[Names.GetParamFieldChanged] = Names.GetParamObjType;
                        
                        //alert(propsObj[Names.GetParamObjType]+' - '+propsObj[Names.GetParamFieldChanged]);
                        
                        loadingData(Names.ActionFieldChange, g_cid,propsObj); 
                });
                
                $('#dlg_object_name').bind("change", function(event){
                        var propsObj = {};
                        propsObj[Names.GetParamObjType] = $('#dlg_object_type').children()[jQuery('#dlg_object_type')[0].selectedIndex].value;
                        propsObj[Names.GetParamCalID] = g_cid;
                        propsObj[Names.GetParamObjName] = $(this).attr('value');
                        propsObj[Names.GetParamStartField] = $('#dlg_entry_start').children()[jQuery('#dlg_entry_start')[0].selectedIndex].value;
                        propsObj[Names.GetParamEndField] = $('#dlg_entry_end').children()[jQuery('#dlg_entry_end')[0].selectedIndex].value;
                        propsObj[Names.GetParamFieldChanged] = Names.GetParamObjName;
                        
                        loadingData(Names.ActionFieldChange, g_cid, propsObj); 
                });
                
                $('#dlg_entry_start').bind("change", function(event){
                        
                        var propsObj = {};
                        
                        propsObj[Names.GetParamObjType] = $('#dlg_object_type').children()[jQuery('#dlg_object_type')[0].selectedIndex].value;
                        propsObj[Names.GetParamCalID] = g_cid;
                        propsObj[Names.GetParamObjName] = $('#dlg_object_name').children()[jQuery('#dlg_object_name')[0].selectedIndex].value;
                        propsObj[Names.GetParamStartField] = $(this).attr('value');
                        propsObj[Names.GetParamEndField] = $('#dlg_entry_end').children()[jQuery('#dlg_entry_end')[0].selectedIndex].value;
                        
                        propsObj[Names.GetParamFieldChanged] = Names.GetParamStartField;
                        
                        //loadingData(Names.ActionFieldChange, g_cid, propsObj); 
                });
                
                $('#dlg_entry_end').bind("change", function(event){
                        
                        var propsObj = {};
                        
                        propsObj[Names.GetParamObjType] = $('#dlg_object_type').children()[jQuery('#dlg_object_type')[0].selectedIndex].value;
                        propsObj[Names.GetParamCalID] = g_cid;
                        propsObj[Names.GetParamObjName] = $('#dlg_object_name').children()[jQuery('#dlg_object_name')[0].selectedIndex].value;
                        propsObj[Names.GetParamStartField] = $('#dlg_entry_start').children()[jQuery('#dlg_entry_start')[0].selectedIndex].value;
                        propsObj[Names.GetParamEndField] = $(this).attr('value');
                        
                        propsObj[Names.GetParamFieldChanged] = Names.GetParamEndField;
                        
                        //alert(propsObj[Names.GetParamObjName]+'-'+propsObj[Names.GetParamStartField]+'-'+propsObj[Names.GetParamEndField]);
                       	//loadingData(Names.ActionFieldChange, g_cid, propsObj);
                });
                
                $(DeleteButtonsClass).click(function(event) {
                        g_cid = $(this).attr("cid");
                        if( on_delete() ) {
                                sendActionRequest(Names.ActionCalendarDelete, g_cid);
                        }
                });
                
                $('.non-moveable').draggable('disable');
                
        });             
})(jQuery);
</script>

<apex:sectionHeader title="Calendars Control" subtitle="Edit Calendar"/>
<apex:form >
<apex:pageBlock id="pb0" title="Calendar Settings" mode="edit">
        <apex:pageBlockButtons location="top">
            <input id="saveBtn" type="button" value="Save" class="btn"/>
            <input type="button" value="Cancel" class="btn" onclick="window.location.href='{!AjaxListPageName}'"/>
            
        </apex:pageBlockButtons>

        <apex:pageBlockButtons location="bottom">
            <input id="saveBtnBot" type="button" value="Save" class="btn"/>
            <input type="button" value="Cancel" class="btn" onclick="window.location.href='{!AjaxListPageName}'"/>
            
        </apex:pageBlockButtons>


<div id="dlg_add_edit" title="Add new calendar" style="width:980px; padding-right:0px; padding-left: 0px;  ">
        <div id="steps">
     <div id="step1" class="text-size" >
        <h3 class="fcui-block-header"><a href="#">Step 1: Enter Calendar Name and Color</a></h3>
        <div>
                <table width="100%" >
                <tr>
                        <td align="left" width="50%" >
                                <table> 
                                        <tr>
                                                <td>
                                                        <span class="ui-form-label">Calendar Name: </span>
                                                </td>
                                                <td>
                                                        <input type="text" name="calendar_name" maxlength="80" id="dlg_calendar_name" class="text ui-widget-content ui-corner-all" />
                                                </td>
                                        </tr>
                                </table>
                    </td>
                        <td align="center">
                                <span class="ui-form-label">Color:</span>
                    </td>
                    <td>
                        <div id="dlg_colors_popup">
                        </div>    
                    </td>
                </tr>
                </table>   
        </div>
     </div>
     <div id="step2" class="text-size" >
        <h3 class="fcui-block-header"><a href="#">Step 2: Specify Object &amp; Entry Details</a></h3>
        <div>
        <table width="100%">
        <tr>
                <td>
                <!-- inner table -->
                <table>
                <tr>
                        <td>
                        <span class="ui-form-label">Object Type: </span>        
                    </td>
                    <td>
                        <select name="object_type" id="dlg_object_type"  class="text ui-widget-content ui-corner-all" >
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        <span class="ui-form-label">Object Name: </span>
                    </td>
                    <td>
                        <select name="object_name" id="dlg_object_name"  class="text ui-widget-content ui-corner-all" >
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        <span class="ui-form-label">Entry Label: </span>
                    </td>
                    <td>
                                <select name="entry_label" id="dlg_entry_label"  class="text ui-widget-content ui-corner-all" >
                                </select>
                    </td>
                </tr>
                                </table>
            </td>
            <td>
                    <table>
                    <tr>
                                <td>
                                <span class="ui-form-label">Entry Start:</span>
                        </td>
                        <td>
                                <select name="entry_start" id="dlg_entry_start"  class="text ui-widget-content ui-corner-all">
                                </select>
                        </td>
                    </tr>   
                    <tr>
                        <td>
                                <span class="ui-form-label">Entry End: </span>
                        </td>
                        <td>
                                <select name="entry_end" id="dlg_entry_end"  class="text ui-widget-content ui-corner-all" >
                                </select>       
                        </td>
                    </tr>                      
                    <tr>
                        <td>
                                <span class="ui-form-label">Visible: </span>
                        </td>
                        <td align="left">
                                <!-- <label for="visible" class="text-size">Visible</label> -->
                                <input type="checkbox" name="visible" id="dlg_visible" />
                        </td>
                        <td>
                                <span class="ui-form-label">Editable: </span>
                        </td>
                        <td align="left">
                                <!-- <label for="visible" class="text-size">Visible</label> -->
                                <input type="checkbox" name="editable" id="dlg_editable" />
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        </table>   
        </div>
    </div>
    <div id="step3" class="text-size" >
        <h3 class="fcui-block-header"><a href="#">Step 3: Specify Fields to Display </a></h3>
        <div id="dlg_display" style="overflow:hidden;">
                <table style="height:220px;width:95%" align="center">
                <tr>
                   <td class="list-column">
                       <div id="list_of_object_fields">
                           <h5 >Available:</h5>
                           <ul class="ui-state-highlight connectedSortable" style="cursor: default;position:static; width:100%;"></ul>
                       </div>
                   </td>
                   <td style=" width:40px;" class="list-column" align="center">
                        <div class="right_btn" id="step3_right_btn" style="width:40px;text-align:center;" ></div>
                        <div class="left_btn" id="step3_left_btn" style="width:40px;text-align:center;margin-top:10px;" ></div>
                   </td>
                   <td class="list-column"> 
                       <div id="list_of_selected_fields">
                           <h5>Selected:</h5>
                           <ul class="ui-state-highlight connectedSortable" style="cursor: default;position:static; width:100%;"></ul> 
                       </div>
                   </td>
                 </tr>
            </table>    
        </div>
    </div>
    
    <div id="step4" class="text-size">
        <h3 class="fcui-block-header"><a href="#">Step 4: Specify calendar entry edit fields</a></h3>
        <div id="dlg_display_on_create" style="overflow:hidden;">
                <table style="height:220px;width:95%;" align="center">
                <tr>
                   <td class="list-column">
                       <div id="list_of_object_creating_fields">
                           <h5 >Available fields:</h5>
                           <ul class="ui-state-highlight connectedSortable" style="cursor: default;position:static; width:100%;"></ul>
                       </div>
                   </td>
                   <td style=" width:40px;" class="list-column" align="center">
                        <div class="right_btn" id="step4_right_btn" style="width:40px;text-align:center;" ></div>
                        <div class="left_btn" id="step4_left_btn" style="width:40px;text-align:center;margin-top:10px;" ></div>
                   </td>
                   <td class="list-column">
                       <div id="list_of_selected_creating_fields">
                           <h5>Selected fields:</h5>
                           <ul class="ui-state-highlight connectedSortable" style="cursor: default;position:static; width:100%;"></ul> 
                       </div>
                   </td>
                 </tr>
            </table>    
            Fields borderd by <b style="color:#a00;">RED</b> are required and cannot be removed
        </div>
    </div>
    
    <div id="step5" class="text-size">
        <h3 class="fcui-block-header"><a href="#">Step 5: Specify Filter Criteria</a></h3>
        <div>
            <div id="records" style="margin:0px 2px 0px 5px;">
                <table cellpadding="0" cellspacing="0" border="0">
                <tr>
                	<td><span class="ui-form-label">Ownership:</span></td>
                	<td><input type="radio" id="my_records" return="my" value="my" name="records" /></td>
                	<td style="padding:3px 0 0 0"><label for="my_records" class="text-size">My Records</label></td>
                	<td><input type="radio" id="all_records" return="all" value="all" name="records"/></td>
                	<td style="padding:3px 0 0 0"><label for="all_records" class="text-size">All Records</label></td>
                </tr>
                </table>
            </div>
            <div id="filters" style="margin:10px 2px 2px 2px;">
                <span class="ui-form-label">Filters:</span>     
                <div id="dlg_filters" style="width:590px" class="ui-widget-content ui-corner-all"></div>        
            </div>
        </div>
    </div>
    
    <div id="step6" class="text-size" >
        <h3 class="fcui-block-header"><a href="#">Step 6: Restrict Visibility</a></h3>
        <div>
                <div id="restricts" style="margin:0px 2px 10px 5px;">
                <table cellpadding="0" cellspacing="0" border="0">
                <tr>
                	<td><input type="radio" id="restricts_me" return="me" value="me" name="restricts" /></td>
                <td style="padding:3px 0 0 0"><label for="restricts_me" class="text-size">Visible only to me</label></td>
                <!-- <input type="radio" id="restricts_all" return="all" name="restricts" />
                 <label for="restricts_all" class="text-size">Visible to all users</label> -->
               	<td><input type="radio" id="restricts_selected" return="selected" value="selected" name="restricts"/></td> 
                <td style="padding:3px 0 0 0"><label for="restricts_selected" class="text-size">Visible to certain groups of user</label></td>
                </tr>
                </table>
            </div>
            <div id="groups" style="overflow:hidden;">
            <table style="height:220px;width:95%;" align="center">
                <tr>
                    <td class="list-column">
                        <div id="list_of_groups">
                            <h5 >Available:</h5>
                            <ul class="ui-state-highlight connectedGroups" style="cursor: default;position:static; width:100%;"></ul>
                        </div>
                    </td>
                    <td style=" width:40px;" class="list-column" align="center">
                        <div class="right_btn" id="step6_right_btn" style="width:40px;text-align:center;" ></div>
                        <div class="left_btn" id="step6_left_btn" style="width:40px;text-align:center;margin-top:10px;" ></div>
                    </td>
                    <td class="list-column">
	                    <div id="list_of_selected_groups">
	                        <h5>Selected:</h5>
	                        <ul class="ui-state-highlight connectedGroups" style="cursor: default;position:static; width:100%;"></ul> 
	                    </div>
                   </td>
                 </tr>
            </table>    
            </div>
        </div>
    </div>
  </div>
</div>

</apex:pageBlock>
</apex:form>

</apex:page>